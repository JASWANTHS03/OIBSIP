<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>My Todo List</title>
	<link rel="stylesheet" href="todo.css" />
	
</head>
<body background="istockphoto-116772376-612x612.jpg" >
	<header>
        <section class="h1">
		<div class="rotate">
			<h1> My Todo List</h1>
		</div>
		<form id="new-task-form">
			<input 
				type="text" 
				name="new-task-input" 
       			id="new-task-input" 
				placeholder="What's Your Plan ?" />
			<input 
				type="submit"
				id="new-task-submit" 
				value="ADD" />   
		</form>
    </section> 
	</header>
	<hr>
	<main>
		<section class="task-list">
        <section class="h2">
			<h2>Tasks :-</h2>
            <div id="tasks">

			</div>
        </section>
		</section>
	</main>

	<script src="todo.js"></script>
</body>
</html>

<!--CSS>

:root {
	
}
h1 {text-align: center;}
h2{text-align:left}
* {
	margin: 0;
	box-sizing: border-box;
}

body {
	display: flex;
	flex-direction: column;
	min-height: 100vh;
	color: rgb(0, 0, 0);
	/* background-image: url(td.jpg); */
}

header {
	padding: 2rem 1rem;
	max-width: 800px;
	width: 100%;
	margin: 0 auto;
}

header h1{ 
	font-size: 3rem;
	font-weight: 300;
	color: black;
	margin-bottom: 1rem;
	font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
}

#new-task-form {
	display: flex;
    border-radius: 20px;
}

input, button {
	appearance: none;
	border: none;
	outline: none;
	background: none;
}

#new-task-input {
	flex: 1 1 0%;
	background-color: rgb(255, 255, 255);
	padding: 1rem;
	border-radius: 1rem;
	margin-right: 1rem;
	color: rgb(46, 28, 211);
	border: 3px solid rgb(0, 0, 255);
	font-size: 1.40rem;
    font-family: cursive;

}

#new-task-input::placeholder {
	color: black;
    font-family: cursive;
}

#new-task-submit {
	color:white;
	font-size: 1.35rem;
	font-weight: 700;
	width: 4em;
	background-color:rgb(0, 0, 0);
    border-radius: 20px;
	border: 2px solid blue;
	cursor: pointer;
	transition: 0.4s;
}

#new-task-submit:hover {
	color:black;
	border: 2px solid black;
	background-color: blue;
	transform: scale(1.05);


}

#new-task-submit:active {
	opacity: 0.6;
}

main {
	flex: 1 1 0%;
	max-width: 800px;
	width: 100%;
	margin:auto;
}

.task-list {
	padding: 1rem;
}

.task-list h2 {
	font-size: 2rem;
	font-weight: 300;
	color:black;
	margin-bottom: 1rem;
	font-family: fantasy;
    
}



#tasks .task {
	display: flex;
	justify-content: space-between;
	background-color: rgb(55, 168, 233);
	padding: 1rem;
	border-radius: 1rem;
	margin-bottom: 1rem;
    border: 2px solid yellow;

}

.task .content {
	flex: 1 1 0%;
}

.task .content .text {
	color: black;
	font-family: cursive;
	font-size: 1.3em;
	width: 100%;
	display: block;
	transition: 0.4s;
}

.task .content .text:not(:read-only) {
	color: var(--pink);
}

.task .actions {
	display: flex;
	margin: 0 -0.5rem;
}

.task .actions button {
	cursor: pointer;
	margin: 0 0.5rem;
	font-size: 1.125rem;
	font-weight: 700;
	text-transform: uppercase;
	transition: 0.4s;
}

.task .actions button:hover {
	opacity: 0.8;
}

.task .actions button:active {
	opacity: 0.6;
}

.task .actions .delete {
	color: red;
}



.rotate{
	height: 100px;
	position: relative;
	animation-name: example;
	animation-duration: 2s;
	animation-delay: 1s;
	animation-iteration-count: 1;
  }
  
   {
	0%   {rotate:360deg;}
  }
  
  <!--JAVASCRIPT>
  window.addEventListener('load', () => {
	const form = document.querySelector("#new-task-form");
	const input = document.querySelector("#new-task-input");
	const list_el = document.querySelector("#tasks");

	form.addEventListener('submit', (e) => {
		e.preventDefault();

		const task = input.value;

		const task_el = document.createElement('div');
		task_el.classList.add('task');

		const task_content_el = document.createElement('div');
		task_content_el.classList.add('content');

		task_el.appendChild(task_content_el);

		const task_input_el = document.createElement('input');
		task_input_el.classList.add('text');
		task_input_el.type = 'text';
		task_input_el.value = task;
		task_input_el.setAttribute('readonly', 'readonly');

		task_content_el.appendChild(task_input_el);

		const task_actions_el = document.createElement('div');
		task_actions_el.classList.add('actions');
		
		const task_edit_el = document.createElement('button');
		task_edit_el.classList.add('edit');
		task_edit_el.innerText = 'Edit';

		const task_delete_el = document.createElement('button');
		task_delete_el.classList.add('delete');
		task_delete_el.innerText = 'Delete';

		task_actions_el.appendChild(task_edit_el);
		task_actions_el.appendChild(task_delete_el);

		task_el.appendChild(task_actions_el);

		list_el.appendChild(task_el);

		input.value = '';

		task_edit_el.addEventListener('click', (e) => {
			if (task_edit_el.innerText.toLowerCase() == "edit") {
				task_edit_el.innerText = "Save";
				task_input_el.removeAttribute("readonly");
				task_input_el.focus();
			} else {
				task_edit_el.innerText = "Edit";
				task_input_el.setAttribute("readonly", "readonly");
			}
		});

		task_delete_el.addEventListener('click', (e) => {
			list_el.removeChild(task_el);
		});
	});
});
